"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userController_1 = require("./Controller/userController");
const middleware_1 = require("./Controller/middleware");
const postController_1 = require("./Controller/postController");
const CommentController_1 = require("./Controller/CommentController");
const NotificationController_1 = require("./Controller/NotificationController");
const router = express_1.default.Router();
router.get("/allUsers", middleware_1.verifyToken, userController_1.allUsers);
router.post("/register", userController_1.register);
router.post("/login", userController_1.login);
router.post("/addFriend", middleware_1.verifyToken, userController_1.addFriend);
router.post("/acceptFriend", middleware_1.verifyToken, userController_1.acceptFriendRequest);
router.get("/myPendingFriendsList", middleware_1.verifyToken, userController_1.myPendingFriendsList);
router.get("/myFriends", middleware_1.verifyToken, userController_1.myFriendList);
router.post("/newPost", middleware_1.verifyToken, postController_1.createPost);
router.get("/myFriendsPost", middleware_1.verifyToken, postController_1.friendsPosts);
router.post("/likePost", middleware_1.verifyToken, postController_1.likePosts);
router.get("/postAttribute", middleware_1.verifyToken, postController_1.postAttributes);
router.get("/posts/:id", middleware_1.verifyToken, postController_1.getPostById);
router.post("/newComment", middleware_1.verifyToken, CommentController_1.createComment);
router.get("/notification", middleware_1.verifyToken, NotificationController_1.getNotification);
router.get("/profileById/:id", middleware_1.verifyToken, userController_1.getUserProfile);
router.post("/profile/:id/edit", middleware_1.verifyToken, userController_1.editProfile);
router.post("/:profileId/addPhoto", middleware_1.verifyToken, userController_1.savePhoto);
router.post("/removePhoto", middleware_1.verifyToken, userController_1.removePhoto);
exports.default = router;
